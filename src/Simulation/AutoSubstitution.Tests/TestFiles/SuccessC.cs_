using System;
using Microsoft.Quantum.Simulation.Core;
using Microsoft.Quantum.Simulation.Simulators;

namespace AutoSubstitutionTests
{
    public partial class Success
    {
        public class Native : Success
        {
            public Native(Microsoft.Quantum.Simulation.Core.IOperationFactory m): base(m)
            {
                sim0 = ((m) as ToffoliSimulator);
            }

            public override void __Init__()
            {
                base.__Init__();
                if ((sim0) != (null))
                {
                    alternative0 = (__Factory__.Get<AutoSubstitutionTests.SuccessClassical>(typeof(AutoSubstitutionTests.SuccessClassical)));
                }
            }

            public override Func<QVoid, QVoid> __Body__
            {
                get
                {
                    return args =>
                    {
                        if ((sim0) != (null))
                        {
                            return alternative0.__Body__(args);
                        }
                        else
                        {
                            return base.__Body__(args);
                        }
                    }

                    ;
                }
            }

            public override Func<(IQArray<Qubit>, QVoid), QVoid> __ControlledBody__
            {
                get
                {
                    return args =>
                    {
                        if ((sim0) != (null))
                        {
                            return alternative0.__ControlledBody__(args);
                        }
                        else
                        {
                            return base.__ControlledBody__(args);
                        }
                    }

                    ;
                }
            }

            private AutoSubstitutionTests.SuccessClassical alternative0 = null;
            private ToffoliSimulator sim0 = null;
        }
    }
}