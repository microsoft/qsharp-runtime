//----------------------------------------------------------------------------------------------------------------------
// <auto-generated />
// This code was generated by the Microsoft.Quantum.Qir.Runtime.Tools package.
// The purpose of this source code file is to provide an entry-point for executing a QIR program.
// It handles parsing of command line arguments, and it invokes an entry-point function exposed by the QIR program.
//----------------------------------------------------------------------------------------------------------------------

#include <fstream>
#include <iostream>
#include <map>
#include <memory>
#include <vector>

#include "CLI11.hpp"

using namespace std;

extern "C" void UseIntegerArg(
    int64_t IntegerArg
); // QIR interop function.

int main(int argc, char* argv[])
{
    CLI::App app("QIR Standalone Entry Point");

    // Add a command line option for each entry-point parameter.
    int64_t IntegerArgCli;
    IntegerArgCli = 0;
    app.add_option("--IntegerArg", IntegerArgCli, "Option to provide a value for the IntegerArg parameter")
        ->required();

    // After all the options have been added, parse arguments from the command line.
    CLI11_PARSE(app, argc, argv);

    // Cast parsed arguments to its interop types.
    int64_t IntegerArgInterop = IntegerArgCli;

    // Execute the entry point operation.
    UseIntegerArg(
        IntegerArgInterop
    );

    // Flush the output of the simulation.
    cout.flush();

    return 0;
}
