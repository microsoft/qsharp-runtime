# Scripts Map (Scripts Call Tree, shows the relations between the scripts).
# Azure Pipelines documentation: https://docs.microsoft.com/en-us/azure/devops/pipelines/?view=azure-devops
# See also: 
#   QDK build pipeline wiki https://ms-quantum.visualstudio.com/Quantum%20Program/_wiki/wikis/Quantum-OKRs.wiki/328/QDK-build-pipeline

# Pipeline: 
#   microsoft.qsharp-runtime            https://dev.azure.com/ms-quantum-public/Microsoft%20Quantum%20(public)/_build?definitionId=15&_a=summary
#   microsoft.qsharp-runtime.sanitized  https://dev.azure.com/ms-quantum-public/Microsoft%20Quantum%20(public)/_build?definitionId=34&_a=summary
ci.yml (Build.Configuration = (microsoft.qsharp-runtime           ? Release : 
                               microsoft.qsharp-runtime.sanitized ? Debug   :
                               <?>), 
        Build.Verbosity = n, Skip.Tests = false)
    steps.yml
        steps-init.yml
            'Use NuGet 5.6.0' NuGetToolInstaller@0
            'Use .NET Core SDK 3.1.300' UseDotNet@2

            "!Windows Install rust"     curl https://sh.rustup.rs -sSf | sh -s -- -y
            "Windows Install rust"
                curl -sSf -o rustup-init.exe https://win.rustup.rs
                rustup-init.exe -y
            "Enable Rust formatting and nightly options."
                rustup install nightly
                rustup component add rustfmt clippy
                rustup component add rustfmt clippy --toolchain nightly

            "Custom prerequisites for the build" $(System.DefaultWorkingDirectory)/./bootstrap.ps1  (workingDirectory: $(System.DefaultWorkingDirectory))
                Push-Location $PSScriptRoot/build
                    .\prerequisites.ps1
                        & "$PSScriptRoot/set-env.ps1"   # Sets a number of env vars.
                            
                        Push-Location $PSScriptRoot/"../src/Simulation/Simulators"
                            .\FindNuspecReferences.ps1
                        Pop-Location
                        [$PSScriptRoot/"../src/Simulation/Native"/.\prerequisites.ps1]  # Install gcc-7 on MacOS

                        Push-Location $PSScriptRoot/"../src/Qir/Runtime"
                            .\prerequisites.ps1                                         # Insatll llvm, ninja, cmake, clang[-tidy]
                        Pop-Location
                        (end)
                Pop-Location

                Push-Location $PSScriptRoot/"./src/Simulation/qdk_sim_rs"
                    dotnet tool restore
                    dotnet script inject-version.csx -- `
                        --template Cargo.toml.template `
                        --out-path Cargo.toml `
                        --version $Env:NUGET_VERSION;
                Pop-Location
                [   // if local build
                    [
                        $PSScriptRoot/"src/Simulation/Native"/.\build-native-simulator.ps1
                        [$PSScriptRoot/"src/Simulation/qdk_sim_rs"/.\build-qdk-sim-rs.ps1]
                    ]
                    [$PSScriptRoot/"src/Qir/Runtime"/.\build-qir-runtime.ps1]
                    dotnet build Simulation.sln
                ]
            (end)
        "Building Q# runtime" $(System.DefaultWorkingDirectory)/build/./build.ps1
            & "$PSScriptRoot/set-env.ps1"
            [$PSScriptRoot/"../src/Simulation/Native"/build-native-simulator.ps1]
            [$PSScriptRoot/"../src/Qir/Runtime"/build-qir-runtime.ps1]           
            [$PSScriptRoot/"../src/Simulation/qdk_sim_rs"/build-qdk-sim-rs.ps1]  

        "Testing Q# runtime" $(System.DefaultWorkingDirectory)/build/./test.ps1
            . . .
        "Pack Q# runtime (Windows only)" $(System.DefaultWorkingDirectory)/build/./pack.ps1  # Windows only!
            # condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))
        "List built packages & assemblies" '$(System.DefaultWorkingDirectory)/build'/.\manifest.ps1
            # condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))      # Windows only!
        steps-wrap-up.yml
        (end)
    (end)


# microsoft.qsharp-runtime.e2e  https://dev.azure.com/ms-quantum-public/Microsoft%20Quantum%20(public)/_build?definitionId=27
e2e.yml
    . . .
