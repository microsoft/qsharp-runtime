name: $(Build.Major).$(Build.Minor).$(DayOfMonth)$(rev:rr)

trigger: none

pr:
- main
- feature/*
- features/*
- release/*

schedules:
- cron: "0 9 * * Sat"
  displayName: 'Build for Component Governance'
  branches:
    include:
    - main
  always: true

variables:
  Build.Major: 0
  Build.Minor: 16
  Drops.Dir: $(Build.ArtifactStagingDirectory)/drops
  Drop.Native: $(System.DefaultWorkingDirectory)/xplat
  CI: "true"

jobs:
- job: build
  displayName: Build
  strategy:
    matrix:
      linux:
        # We intentionally use the previous LTS (20.04) to make sure that
        # we don't accidentally link LLVM-produced binaries to glibc 2.35.
        # By default, the x86_64-unknown-linux-gnu target links against the
        # version of glibc provided with the host OS, such that compiling
        # on 22.04 can introduce a hard requirement for users to upgrade to
        # the latest LTS.
        imageName: 'ubuntu-20.04'
      mac:
        imageName: 'macOS-latest'
      windows:
        imageName: 'windows-latest'
  pool: 
    vmImage: $(imageName)
  timeoutInMinutes: 90

  steps:
  - template: steps.yml

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
    inputs:
      failOnAlert: false
